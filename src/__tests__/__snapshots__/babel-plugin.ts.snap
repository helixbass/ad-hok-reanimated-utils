// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`unknown plugin 1. unknown plugin: 1. unknown plugin 1`] = `

const Component = flowMax(
  addAnimatedStyle('style', ({opacity}) => () => ({
    opacity,
  })),
  addAnimatedStyle('style', ({opacity}) => () => {
    return {
      opacity
    }
  }),
  () => null
)

      ↓ ↓ ↓ ↓ ↓ ↓

const Component = flowMax(
  addAnimatedStyle('style', ({opacity}) => () => {
    'worklet'

    return {
      opacity,
    }
  }),
  addAnimatedStyle('style', ({opacity}) => () => {
    'worklet'

    return {
      opacity,
    }
  }),
  () => null,
)


`;

exports[`unknown plugin 2. unknown plugin: 2. unknown plugin 1`] = `

const Component = flowMax(
  addDerivedValue('value', ({position}) => () => ({
    opacity: position.value * 0.1,
  })),
  addDerivedValue('value', ({position}) => () => {
    return {
      opacity: position.value * 0.1,
    }
  }),
  () => null
)

      ↓ ↓ ↓ ↓ ↓ ↓

const Component = flowMax(
  addDerivedValue('value', ({position}) => () => {
    'worklet'

    return {
      opacity: position.value * 0.1,
    }
  }),
  addDerivedValue('value', ({position}) => () => {
    'worklet'

    return {
      opacity: position.value * 0.1,
    }
  }),
  () => null,
)


`;

exports[`unknown plugin 3. unknown plugin: 3. unknown plugin 1`] = `

const Component = flowMax(
  addDerivedValues(({position}) => ({
    value: () => position.value * 0.1,
    otherValue: () => {
      return position.value * 0.2
    }
  })),
  () => null
)

      ↓ ↓ ↓ ↓ ↓ ↓

const Component = flowMax(
  addDerivedValues(({position}) => ({
    value: () => {
      'worklet'

      return position.value * 0.1
    },
    otherValue: () => {
      'worklet'

      return position.value * 0.2
    },
  })),
  () => null,
)


`;

exports[`unknown plugin 4. unknown plugin: 4. unknown plugin 1`] = `

const Component = flowMax(
  addAnimatedProps('pathAnimatedProps', ({center}) => () => ({
    d: \`M \${center.x} \${center.y}\`,
  })),
  () => null
)

      ↓ ↓ ↓ ↓ ↓ ↓

const Component = flowMax(
  addAnimatedProps('pathAnimatedProps', ({center}) => () => {
    'worklet'

    return {
      d: \`M \${center.x} \${center.y}\`,
    }
  }),
  () => null,
)


`;

exports[`unknown plugin 5. unknown plugin: 5. unknown plugin 1`] = `

const Component = flowMax(
  addAnimatedCallback(({position, setValue}) => () => {
    if (position.value > 0.5) {
      setValue(true)
    }
  }),
  () => null
)

      ↓ ↓ ↓ ↓ ↓ ↓

const Component = flowMax(
  addAnimatedCallback(({position, setValue}) => () => {
    'worklet'

    if (position.value > 0.5) {
      setValue(true)
    }
  }),
  () => null,
)


`;
